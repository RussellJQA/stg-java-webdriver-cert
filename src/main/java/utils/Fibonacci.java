package utils;

import java.math.BigInteger;
import java.util.*;

/*
This class has functions for dealing with Fibonacci numbers, and Fibonacci
sequences. For an explanation of Fibonacci numbers and Fibonacci sequences,
see https://en.wikipedia.org/wiki/Fibonacci_number
*/

public class Fibonacci {

    /*
    This is a list of the first 301 Fibonacci numbers from
    "The first 300 Fibonacci numbers, completely factorised"
            at http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibtable.html
            [The referenced Web page lists 301 Fibonacci numbers, those for n=0 through n=300.]
    */
    private static final List<BigInteger> expectedFibonaccis = Arrays.asList(

            // ints
            BigInteger.valueOf(0),
            BigInteger.valueOf(1),
            BigInteger.valueOf(1),
            BigInteger.valueOf(2),
            BigInteger.valueOf(3),
            BigInteger.valueOf(5),
            BigInteger.valueOf(8),
            BigInteger.valueOf(13),
            BigInteger.valueOf(21),
            BigInteger.valueOf(34),
            BigInteger.valueOf(55),
            BigInteger.valueOf(89),
            BigInteger.valueOf(144),
            BigInteger.valueOf(233),
            BigInteger.valueOf(377),
            BigInteger.valueOf(610),
            BigInteger.valueOf(987),
            BigInteger.valueOf(1597),
            BigInteger.valueOf(2584),
            BigInteger.valueOf(4181),
            BigInteger.valueOf(6765),
            BigInteger.valueOf(10946),
            BigInteger.valueOf(17711),
            BigInteger.valueOf(28657),
            BigInteger.valueOf(46368),
            BigInteger.valueOf(75025),
            BigInteger.valueOf(121393),
            BigInteger.valueOf(196418),
            BigInteger.valueOf(317811),
            BigInteger.valueOf(514229),
            BigInteger.valueOf(832040),
            BigInteger.valueOf(1346269),
            BigInteger.valueOf(2178309),
            BigInteger.valueOf(3524578),
            BigInteger.valueOf(5702887),
            BigInteger.valueOf(9227465),
            BigInteger.valueOf(14930352),
            BigInteger.valueOf(24157817),
            BigInteger.valueOf(39088169),
            BigInteger.valueOf(63245986),
            BigInteger.valueOf(102334155),
            BigInteger.valueOf(165580141),
            BigInteger.valueOf(267914296),
            BigInteger.valueOf(433494437),
            BigInteger.valueOf(701408733),
            BigInteger.valueOf(1134903170),
            BigInteger.valueOf(1836311903),

            // longs
            BigInteger.valueOf(2971215073L),
            BigInteger.valueOf(4807526976L),
            BigInteger.valueOf(7778742049L),
            BigInteger.valueOf(12586269025L),
            BigInteger.valueOf(20365011074L),
            BigInteger.valueOf(32951280099L),
            BigInteger.valueOf(53316291173L),
            BigInteger.valueOf(86267571272L),
            BigInteger.valueOf(139583862445L),
            BigInteger.valueOf(225851433717L),
            BigInteger.valueOf(365435296162L),
            BigInteger.valueOf(591286729879L),
            BigInteger.valueOf(956722026041L),
            BigInteger.valueOf(1548008755920L),
            BigInteger.valueOf(2504730781961L),
            BigInteger.valueOf(4052739537881L),
            BigInteger.valueOf(6557470319842L),
            BigInteger.valueOf(10610209857723L),
            BigInteger.valueOf(17167680177565L),
            BigInteger.valueOf(27777890035288L),
            BigInteger.valueOf(44945570212853L),
            BigInteger.valueOf(72723460248141L),
            BigInteger.valueOf(117669030460994L),
            BigInteger.valueOf(190392490709135L),
            BigInteger.valueOf(308061521170129L),
            BigInteger.valueOf(498454011879264L),
            BigInteger.valueOf(806515533049393L),
            BigInteger.valueOf(1304969544928657L),
            BigInteger.valueOf(2111485077978050L),
            BigInteger.valueOf(3416454622906707L),
            BigInteger.valueOf(5527939700884757L),
            BigInteger.valueOf(8944394323791464L),
            BigInteger.valueOf(14472334024676221L),
            BigInteger.valueOf(23416728348467685L),
            BigInteger.valueOf(37889062373143906L),
            BigInteger.valueOf(61305790721611591L),
            BigInteger.valueOf(99194853094755497L),
            BigInteger.valueOf(160500643816367088L),
            BigInteger.valueOf(259695496911122585L),
            BigInteger.valueOf(420196140727489673L),
            BigInteger.valueOf(679891637638612258L),
            BigInteger.valueOf(1100087778366101931L),
            BigInteger.valueOf(1779979416004714189L),
            BigInteger.valueOf(2880067194370816120L),
            BigInteger.valueOf(4660046610375530309L),
            BigInteger.valueOf(7540113804746346429L),

            // Only use constructors for BigIntegers when needed, because they're less clear and use more memory than
            // just using literal int or long values.
            // See SonarSource rule: Constructors should not be used to instantiate "String", "BigInteger", "BigDecimal" and primitive-wrapper classes
            // at https://rules.sonarsource.com/java/tag/performance/RSPEC-2129

            // BigIntegers
            new BigInteger("12200160415121876738"),
            new BigInteger("19740274219868223167"),
            new BigInteger("31940434634990099905"),
            new BigInteger("51680708854858323072"),
            new BigInteger("83621143489848422977"),
            new BigInteger("135301852344706746049"),
            new BigInteger("218922995834555169026"),
            new BigInteger("354224848179261915075"),
            new BigInteger("573147844013817084101"),
            new BigInteger("927372692193078999176"),
            new BigInteger("1500520536206896083277"),
            new BigInteger("2427893228399975082453"),
            new BigInteger("3928413764606871165730"),
            new BigInteger("6356306993006846248183"),
            new BigInteger("10284720757613717413913"),
            new BigInteger("16641027750620563662096"),
            new BigInteger("26925748508234281076009"),
            new BigInteger("43566776258854844738105"),
            new BigInteger("70492524767089125814114"),
            new BigInteger("114059301025943970552219"),
            new BigInteger("184551825793033096366333"),
            new BigInteger("298611126818977066918552"),
            new BigInteger("483162952612010163284885"),
            new BigInteger("781774079430987230203437"),
            new BigInteger("1264937032042997393488322"),
            new BigInteger("2046711111473984623691759"),
            new BigInteger("3311648143516982017180081"),
            new BigInteger("5358359254990966640871840"),
            new BigInteger("8670007398507948658051921"),
            new BigInteger("14028366653498915298923761"),
            new BigInteger("22698374052006863956975682"),
            new BigInteger("36726740705505779255899443"),
            new BigInteger("59425114757512643212875125"),
            new BigInteger("96151855463018422468774568"),
            new BigInteger("155576970220531065681649693"),
            new BigInteger("251728825683549488150424261"),
            new BigInteger("407305795904080553832073954"),
            new BigInteger("659034621587630041982498215"),
            new BigInteger("1066340417491710595814572169"),
            new BigInteger("1725375039079340637797070384"),
            new BigInteger("2791715456571051233611642553"),
            new BigInteger("4517090495650391871408712937"),
            new BigInteger("7308805952221443105020355490"),
            new BigInteger("11825896447871834976429068427"),
            new BigInteger("19134702400093278081449423917"),
            new BigInteger("30960598847965113057878492344"),
            new BigInteger("50095301248058391139327916261"),
            new BigInteger("81055900096023504197206408605"),
            new BigInteger("131151201344081895336534324866"),
            new BigInteger("212207101440105399533740733471"),
            new BigInteger("343358302784187294870275058337"),
            new BigInteger("555565404224292694404015791808"),
            new BigInteger("898923707008479989274290850145"),
            new BigInteger("1454489111232772683678306641953"),
            new BigInteger("2353412818241252672952597492098"),
            new BigInteger("3807901929474025356630904134051"),
            new BigInteger("6161314747715278029583501626149"),
            new BigInteger("9969216677189303386214405760200"),
            new BigInteger("16130531424904581415797907386349"),
            new BigInteger("26099748102093884802012313146549"),
            new BigInteger("42230279526998466217810220532898"),
            new BigInteger("68330027629092351019822533679447"),
            new BigInteger("110560307156090817237632754212345"),
            new BigInteger("178890334785183168257455287891792"),
            new BigInteger("289450641941273985495088042104137"),
            new BigInteger("468340976726457153752543329995929"),
            new BigInteger("757791618667731139247631372100066"),
            new BigInteger("1226132595394188293000174702095995"),
            new BigInteger("1983924214061919432247806074196061"),
            new BigInteger("3210056809456107725247980776292056"),
            new BigInteger("5193981023518027157495786850488117"),
            new BigInteger("8404037832974134882743767626780173"),
            new BigInteger("13598018856492162040239554477268290"),
            new BigInteger("22002056689466296922983322104048463"),
            new BigInteger("35600075545958458963222876581316753"),
            new BigInteger("57602132235424755886206198685365216"),
            new BigInteger("93202207781383214849429075266681969"),
            new BigInteger("150804340016807970735635273952047185"),
            new BigInteger("244006547798191185585064349218729154"),
            new BigInteger("394810887814999156320699623170776339"),
            new BigInteger("638817435613190341905763972389505493"),
            new BigInteger("1033628323428189498226463595560281832"),
            new BigInteger("1672445759041379840132227567949787325"),
            new BigInteger("2706074082469569338358691163510069157"),
            new BigInteger("4378519841510949178490918731459856482"),
            new BigInteger("7084593923980518516849609894969925639"),
            new BigInteger("11463113765491467695340528626429782121"),
            new BigInteger("18547707689471986212190138521399707760"),
            new BigInteger("30010821454963453907530667147829489881"),
            new BigInteger("48558529144435440119720805669229197641"),
            new BigInteger("78569350599398894027251472817058687522"),
            new BigInteger("127127879743834334146972278486287885163"),
            new BigInteger("205697230343233228174223751303346572685"),
            new BigInteger("332825110087067562321196029789634457848"),
            new BigInteger("538522340430300790495419781092981030533"),
            new BigInteger("871347450517368352816615810882615488381"),
            new BigInteger("1409869790947669143312035591975596518914"),
            new BigInteger("2281217241465037496128651402858212007295"),
            new BigInteger("3691087032412706639440686994833808526209"),
            new BigInteger("5972304273877744135569338397692020533504"),
            new BigInteger("9663391306290450775010025392525829059713"),
            new BigInteger("15635695580168194910579363790217849593217"),
            new BigInteger("25299086886458645685589389182743678652930"),
            new BigInteger("40934782466626840596168752972961528246147"),
            new BigInteger("66233869353085486281758142155705206899077"),
            new BigInteger("107168651819712326877926895128666735145224"),
            new BigInteger("173402521172797813159685037284371942044301"),
            new BigInteger("280571172992510140037611932413038677189525"),
            new BigInteger("453973694165307953197296969697410619233826"),
            new BigInteger("734544867157818093234908902110449296423351"),
            new BigInteger("1188518561323126046432205871807859915657177"),
            new BigInteger("1923063428480944139667114773918309212080528"),
            new BigInteger("3111581989804070186099320645726169127737705"),
            new BigInteger("5034645418285014325766435419644478339818233"),
            new BigInteger("8146227408089084511865756065370647467555938"),
            new BigInteger("13180872826374098837632191485015125807374171"),
            new BigInteger("21327100234463183349497947550385773274930109"),
            new BigInteger("34507973060837282187130139035400899082304280"),
            new BigInteger("55835073295300465536628086585786672357234389"),
            new BigInteger("90343046356137747723758225621187571439538669"),
            new BigInteger("146178119651438213260386312206974243796773058"),
            new BigInteger("236521166007575960984144537828161815236311727"),
            new BigInteger("382699285659014174244530850035136059033084785"),
            new BigInteger("619220451666590135228675387863297874269396512"),
            new BigInteger("1001919737325604309473206237898433933302481297"),
            new BigInteger("1621140188992194444701881625761731807571877809"),
            new BigInteger("2623059926317798754175087863660165740874359106"),
            new BigInteger("4244200115309993198876969489421897548446236915"),
            new BigInteger("6867260041627791953052057353082063289320596021"),
            new BigInteger("11111460156937785151929026842503960837766832936"),
            new BigInteger("17978720198565577104981084195586024127087428957"),
            new BigInteger("29090180355503362256910111038089984964854261893"),
            new BigInteger("47068900554068939361891195233676009091941690850"),
            new BigInteger("76159080909572301618801306271765994056795952743"),
            new BigInteger("123227981463641240980692501505442003148737643593"),
            new BigInteger("199387062373213542599493807777207997205533596336"),
            new BigInteger("322615043836854783580186309282650000354271239929"),
            new BigInteger("522002106210068326179680117059857997559804836265"),
            new BigInteger("844617150046923109759866426342507997914076076194"),
            new BigInteger("1366619256256991435939546543402365995473880912459"),
            new BigInteger("2211236406303914545699412969744873993387956988653"),
            new BigInteger("3577855662560905981638959513147239988861837901112"),
            new BigInteger("5789092068864820527338372482892113982249794889765"),
            new BigInteger("9366947731425726508977331996039353971111632790877"),
            new BigInteger("15156039800290547036315704478931467953361427680642"),
            new BigInteger("24522987531716273545293036474970821924473060471519"),
            new BigInteger("39679027332006820581608740953902289877834488152161"),
            new BigInteger("64202014863723094126901777428873111802307548623680"),
            new BigInteger("103881042195729914708510518382775401680142036775841"),
            new BigInteger("168083057059453008835412295811648513482449585399521"),
            new BigInteger("271964099255182923543922814194423915162591622175362"),
            new BigInteger("440047156314635932379335110006072428645041207574883"),
            new BigInteger("712011255569818855923257924200496343807632829750245"),
            new BigInteger("1152058411884454788302593034206568772452674037325128"),
            new BigInteger("1864069667454273644225850958407065116260306867075373"),
            new BigInteger("3016128079338728432528443992613633888712980904400501"),
            new BigInteger("4880197746793002076754294951020699004973287771475874"),
            new BigInteger("7896325826131730509282738943634332893686268675876375"),
            new BigInteger("12776523572924732586037033894655031898659556447352249"),
            new BigInteger("20672849399056463095319772838289364792345825123228624"),
            new BigInteger("33449372971981195681356806732944396691005381570580873"),
            new BigInteger("54122222371037658776676579571233761483351206693809497"),
            new BigInteger("87571595343018854458033386304178158174356588264390370"),
            new BigInteger("141693817714056513234709965875411919657707794958199867"),
            new BigInteger("229265413057075367692743352179590077832064383222590237"),
            new BigInteger("370959230771131880927453318055001997489772178180790104"),
            new BigInteger("600224643828207248620196670234592075321836561403380341"),
            new BigInteger("971183874599339129547649988289594072811608739584170445"),
            new BigInteger("1571408518427546378167846658524186148133445300987550786"),
            new BigInteger("2542592393026885507715496646813780220945054040571721231"),
            new BigInteger("4114000911454431885883343305337966369078499341559272017"),
            new BigInteger("6656593304481317393598839952151746590023553382130993248"),
            new BigInteger("10770594215935749279482183257489712959102052723690265265"),
            new BigInteger("17427187520417066673081023209641459549125606105821258513"),
            new BigInteger("28197781736352815952563206467131172508227658829511523778"),
            new BigInteger("45624969256769882625644229676772632057353264935332782291"),
            new BigInteger("73822750993122698578207436143903804565580923764844306069"),
            new BigInteger("119447720249892581203851665820676436622934188700177088360"),
            new BigInteger("193270471243015279782059101964580241188515112465021394429"),
            new BigInteger("312718191492907860985910767785256677811449301165198482789"),
            new BigInteger("505988662735923140767969869749836918999964413630219877218"),
            new BigInteger("818706854228831001753880637535093596811413714795418360007"),
            new BigInteger("1324695516964754142521850507284930515811378128425638237225"),
            new BigInteger("2143402371193585144275731144820024112622791843221056597232"),
            new BigInteger("3468097888158339286797581652104954628434169971646694834457"),
            new BigInteger("5611500259351924431073312796924978741056961814867751431689"),
            new BigInteger("9079598147510263717870894449029933369491131786514446266146"),
            new BigInteger("14691098406862188148944207245954912110548093601382197697835"),
            new BigInteger("23770696554372451866815101694984845480039225387896643963981"),
            new BigInteger("38461794961234640015759308940939757590587318989278841661816"),
            new BigInteger("62232491515607091882574410635924603070626544377175485625797"),
            new BigInteger("100694286476841731898333719576864360661213863366454327287613"),
            new BigInteger("162926777992448823780908130212788963731840407743629812913410"),
            new BigInteger("263621064469290555679241849789653324393054271110084140201023"),
            new BigInteger("426547842461739379460149980002442288124894678853713953114433"),
            new BigInteger("690168906931029935139391829792095612517948949963798093315456"),
            new BigInteger("1116716749392769314599541809794537900642843628817512046429889"),
            new BigInteger("1806885656323799249738933639586633513160792578781310139745345"),
            new BigInteger("2923602405716568564338475449381171413803636207598822186175234"),
            new BigInteger("4730488062040367814077409088967804926964428786380132325920579"),
            new BigInteger("7654090467756936378415884538348976340768064993978954512095813"),
            new BigInteger("12384578529797304192493293627316781267732493780359086838016392"),
            new BigInteger("20038668997554240570909178165665757608500558774338041350112205"),
            new BigInteger("32423247527351544763402471792982538876233052554697128188128597"),
            new BigInteger("52461916524905785334311649958648296484733611329035169538240802"),
            new BigInteger("84885164052257330097714121751630835360966663883732297726369399"),
            new BigInteger("137347080577163115432025771710279131845700275212767467264610201"),
            new BigInteger("222232244629420445529739893461909967206666939096499764990979600")
    );

    private final Map<Integer, BigInteger> cache = new HashMap<>();

    public List<BigInteger> getExpectedFibonaccis() {
        return expectedFibonaccis;
    }

    public BigInteger getFibonacciNumber(int n) {

        if (n == 0) {
            return BigInteger.valueOf(0);
        } else if (n == 1) {
            return BigInteger.valueOf(1);
        } else if (cache.containsKey(n)) {
            return cache.get(n);
        } else {
            BigInteger fibonacciNumber = getFibonacciNumber(n - 1).add(getFibonacciNumber(n - 2));
            cache.put(n, fibonacciNumber);
            return fibonacciNumber;
        }
    }

    public List<BigInteger> getGeneratedFibonacciSequence(int max) {
        List<BigInteger> generatedFibonacciSequence = new ArrayList<>();
        for (int n = 0; n <= max; n++) {
            BigInteger fibonacciNumber = getFibonacciNumber(n);
            generatedFibonacciSequence.add(fibonacciNumber);
        }
        return generatedFibonacciSequence;
    }
}